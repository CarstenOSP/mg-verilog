Block 0: This block first figures out how many stages the priority encoder needs based on the input width. It then computes the next power-of-two size to cover all input bits and pads the original input to match that size. Arrays are declared to track, at each stage, which groups of bits contain at least one “1” (the valid signals) and how those valid signals map to partial one-hot encodings. Finally, it initializes the first stage by dividing the padded input

Block 1: 

Block 2: This block finalizes the multi-level selection process and produces the output signals. At each stage, it examines a pair of previously computed valid bits to decide which half contains a set bit and then selects the corresponding portion of the partial encoding. It also prefixes an additional bit to signify which half was chosen, thereby incrementally extending the partial encoded result. Finally, once all levels have been processed, the module outputs three signals: a single valid bit indicating that at least one input was set, a binary-encoded index pinpointing the highest-priority set bit, and a one-hot representation of that index.

Block 3: This concludes the Verilog module definition, marking the end of all logic and parameter declarations for the priority encoder.

